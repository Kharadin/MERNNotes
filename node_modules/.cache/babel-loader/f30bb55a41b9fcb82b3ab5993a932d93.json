{"ast":null,"code":"var _jsxFileName = \"/Users/dimetrius/Documents/ReactCrashCourse/mynotes/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport notes from '../assets/data';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = props => {\n  _s();\n\n  // let {id} = useParams();\n  let noteId = useParams().id; //Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the route path.\n  //console.log(props);\n  //console.log(useParams);\n\n  console.log(noteId);\n  let note = notes.find(note => note.id === Number(noteId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePage, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useParams","notes","Link","ReactComponent","ArrowLeft","NotePage","props","noteId","id","console","log","note","find","Number","body"],"sources":["/Users/dimetrius/Documents/ReactCrashCourse/mynotes/src/pages/NotePage.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom';\nimport notes from '../assets/data';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nconst NotePage = (props) => {\n // let {id} = useParams();\n  let noteId= useParams().id;\n\n  //Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the route path.\n  //console.log(props);\n  //console.log(useParams);\n  console.log(noteId);\n\n  let note = notes.find(note => note.id === Number(noteId));\n\n\n\n  return (\n    <div className='note'>\n\n      <div className='note-header'>\n         <h3>\n            <Link to='/'>\n              <ArrowLeft />\n            \n            </Link>\n\n         </h3>\n\n      </div>\n      <textarea value= {note?.body} >\n        </textarea>\n      {/* // if there is... */}\n    </div>\n  )\n}\n\nexport default NotePage\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAc,IAAIC,SAA3B,QAA4C,0BAA5C;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC3B;EACC,IAAIC,MAAM,GAAEP,SAAS,GAAGQ,EAAxB,CAF0B,CAI1B;EACA;EACA;;EACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;EAEA,IAAII,IAAI,GAAGV,KAAK,CAACW,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYK,MAAM,CAACN,MAAD,CAArC,CAAX;EAIA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBAEE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACG;QAAA,uBACG,QAAC,IAAD;UAAM,EAAE,EAAC,GAAT;UAAA,uBACE,QAAC,SAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADH;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,eAYE;MAAU,KAAK,EAAGI,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG;IAAxB;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CA/BD;;GAAMT,Q;UAEQL,S;;;KAFRK,Q;AAiCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}