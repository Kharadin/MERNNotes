{"ast":null,"code":"var _jsxFileName = \"/Users/dimetrius/Documents/ReactCrashCourse/mynotes/src/pages/NotesListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import notes from '../assets/data'\n\nimport ListItem from '../components/ListItem';\nimport AddButton from '../components/AddButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar checkNLPTimes = 0;\n\nconst NotesListPage = () => {\n  _s();\n\n  checkNLPTimes++;\n  console.log('checkNLPTimes:', checkNLPTimes);\n  let [notes, setNotes] = useState([]); //console.log(notes)\n\n  useEffect(() => {\n    console.log('i fire once1');\n    getNotes();\n    console.log('i fire once2');\n  }, []);\n\n  let getNotes = async () => {\n    let response = await fetch('http://localhost:8000/notes');\n    let data = await response.json();\n    setNotes(data);\n    console.log('data:', data);\n  }; // console.log('check after getnotes')\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"notes-title\",\n        children: \"\\u2636 Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notes-count\",\n        children: notes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-list\",\n      children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        note: note\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotesListPage, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = NotesListPage;\nexport default NotesListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesListPage\");","map":{"version":3,"names":["React","useEffect","useState","ListItem","AddButton","checkNLPTimes","NotesListPage","console","log","notes","setNotes","getNotes","response","fetch","data","json","length","map","note","index"],"sources":["/Users/dimetrius/Documents/ReactCrashCourse/mynotes/src/pages/NotesListPage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n// import notes from '../assets/data'\nimport ListItem from '../components/ListItem'\nimport AddButton  from '../components/AddButton'\n\n var checkNLPTimes = 0\n\nconst NotesListPage = () => {\n  \n   checkNLPTimes++\n\n  console.log('checkNLPTimes:',  checkNLPTimes )\n\n\n  let [notes, setNotes] = useState ([])\n  //console.log(notes)\n \n  useEffect (()=> {\n    console.log('i fire once1')\n    getNotes()\n    console.log('i fire once2')\n  }, [])\n\n  let getNotes = async () => {\n    let response = await fetch('http://localhost:8000/notes')\n    let data = await response.json()\n    setNotes(data);\n    console.log('data:', data)\n  }\n  // console.log('check after getnotes')\n\n\n  return (\n    <div className=\"notes\">\n        <div className=\"notes-header\">\n            <h2 className=\"notes-title\">&#9782; Notes</h2>\n            <p className=\"notes-count\">{notes.length}</p>\n        </div>\n\n        <div className=\"notes-list\">\n            {notes.map((note, index) => (\n                <ListItem key={index} note={note} />\n            ))}\n        </div>\n      <AddButton />\n\n        \n    </div >\n  )\n}\n\nexport default NotesListPage\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAuB,yBAAvB;;AAEC,IAAIC,aAAa,GAAG,CAApB;;AAED,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAEzBD,aAAa;EAEdE,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA+BH,aAA/B;EAGA,IAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAE,EAAF,CAAhC,CAP0B,CAQ1B;;EAEAD,SAAS,CAAE,MAAK;IACdM,OAAO,CAACC,GAAR,CAAY,cAAZ;IACAG,QAAQ;IACRJ,OAAO,CAACC,GAAR,CAAY,cAAZ;EACD,CAJQ,EAIN,EAJM,CAAT;;EAMA,IAAIG,QAAQ,GAAG,YAAY;IACzB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA1B;IACA,IAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;IACAL,QAAQ,CAACI,IAAD,CAAR;IACAP,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,IAArB;EACD,CALD,CAhB0B,CAsB1B;;;EAGA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAAA,wBACI;QAAI,SAAS,EAAC,aAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAG,SAAS,EAAC,aAAb;QAAA,UAA4BL,KAAK,CAACO;MAAlC;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAK,SAAS,EAAC,YAAf;MAAA,UACKP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP,QAAC,QAAD;QAAsB,IAAI,EAAED;MAA5B,GAAeC,KAAf;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QANJ,eAWE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA1CD;;GAAMb,a;;KAAAA,a;AA4CN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}