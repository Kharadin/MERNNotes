{"ast":null,"code":"var _jsxFileName = \"/Users/dimetrius/Documents/ReactCrashCourse/mynotes/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom'; // import notes from '../assets/data';\n\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = props => {\n  _s();\n\n  // let {id} = useParams();\n  let noteId = useParams().id; // useParams() Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the route path.\n  //console.log(props);\n  //console.log(useParams);\n\n  console.log(noteId); // let note = notes.find(note => note.id === Number(noteId));\n\n  let [note, setNote] = useState(null); // useState should be set at the top level of the component and never inside the useEffect\n\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  let getNote = async () => {\n    let response = await fetch(`http://localhost:8000/notes/${noteId}`);\n    await console.log(response);\n    let data = await response.json();\n    await console.log(data);\n    setNote(data);\n  };\n\n  console.log(note);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePage, \"KaXLZ8oIqTvfoX6IlsTu3Ydlqp8=\", false, function () {\n  return [useParams];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","ReactComponent","ArrowLeft","NotePage","props","noteId","id","console","log","note","setNote","getNote","response","fetch","data","json","e","target","value","body"],"sources":["/Users/dimetrius/Documents/ReactCrashCourse/mynotes/src/pages/NotePage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom';\n// import notes from '../assets/data';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nconst NotePage = (props) => {\n // let {id} = useParams();\n  let noteId= useParams().id;\n\n\n  // useParams() Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the route path.\n  //console.log(props);\n  //console.log(useParams);\n   console.log(noteId);\n\n  \n  // let note = notes.find(note => note.id === Number(noteId));\n  \n  let [note, setNote] = useState (null)\n  // useState should be set at the top level of the component and never inside the useEffect\n\n  useEffect(() => {\n    getNote()\n  }, [noteId])\n\n  let getNote = async () => {\n    let response = await fetch (`http://localhost:8000/notes/${noteId}`)\n    await  console.log(response)\n    let data =  await response.json()\n    await  console.log(data)\n    setNote(data)\n  }\n\n  console.log(note)\n\n  return (\n    <div className='note'>\n\n      <div className='note-header'>\n         <h3>\n            <Link to='/'>\n              <ArrowLeft />\n            \n            </Link>\n\n         </h3>\n\n      </div>\n      <textarea onChange ={(e) => {setNote({...note, 'body':e.target.value})}}value= {note?.body} >\n      {/* // if there is... */}\n        </textarea>\n    </div>\n  )\n}\n\nexport default NotePage\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAc,IAAIC,SAA3B,QAA4C,0BAA5C;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC3B;EACC,IAAIC,MAAM,GAAEN,SAAS,GAAGO,EAAxB,CAF0B,CAK1B;EACA;EACA;;EACCC,OAAO,CAACC,GAAR,CAAYH,MAAZ,EARyB,CAW1B;;EAEA,IAAI,CAACI,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAE,IAAF,CAA9B,CAb0B,CAc1B;;EAEAD,SAAS,CAAC,MAAM;IACdc,OAAO;EACR,CAFQ,EAEN,CAACN,MAAD,CAFM,CAAT;;EAIA,IAAIM,OAAO,GAAG,YAAY;IACxB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAG,+BAA8BR,MAAO,EAAxC,CAA1B;IACA,MAAOE,OAAO,CAACC,GAAR,CAAYI,QAAZ,CAAP;IACA,IAAIE,IAAI,GAAI,MAAMF,QAAQ,CAACG,IAAT,EAAlB;IACA,MAAOR,OAAO,CAACC,GAAR,CAAYM,IAAZ,CAAP;IACAJ,OAAO,CAACI,IAAD,CAAP;EACD,CAND;;EAQAP,OAAO,CAACC,GAAR,CAAYC,IAAZ;EAEA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBAEE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACG;QAAA,uBACG,QAAC,IAAD;UAAM,EAAE,EAAC,GAAT;UAAA,uBACE,QAAC,SAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADH;QAAA;QAAA;QAAA;MAAA;IADH;MAAA;MAAA;MAAA;IAAA,QAFF,eAYE;MAAU,QAAQ,EAAIO,CAAD,IAAO;QAACN,OAAO,CAAC,EAAC,GAAGD,IAAJ;UAAU,QAAOO,CAAC,CAACC,MAAF,CAASC;QAA1B,CAAD,CAAP;MAA0C,CAAvE;MAAwE,KAAK,EAAGT,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEU;IAAtF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAhDD;;GAAMhB,Q;UAEQJ,S;;;KAFRI,Q;AAkDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}