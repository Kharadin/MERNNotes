{"ast":null,"code":"var _jsxFileName = \"/Users/dimetrius/Documents/ReactCrashCourse/mynotes/src/pages/NotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom'; // import notes from '../assets/data';\n\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePage = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  // let {id} = useParams();\n  let noteId = useParams().id;\n  const navigate = useNavigate(); // useParams() Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the route path.\n  //console.log(props);\n  //console.log(useParams);\n\n  console.log(noteId); // let note = notes.find(note => note.id === Number(noteId));\n\n  let [note, setNote] = useState(null); // useState should be set at the top level of the component and never inside the useEffect\n\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n\n  let getNote = async () => {\n    let response = await fetch(`http://localhost:8000/notes/${noteId}`);\n    console.log(response);\n    let data = await response.json();\n    console.log(data);\n    setNote(data);\n  };\n\n  console.log(note);\n\n  let updateNote = async () => {\n    await fetch(`http://localhost:8000/notes/${noteId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({ ...note,\n        'updated': new Date()\n      })\n    });\n  };\n\n  let deleteNote = async e => {\n    await fetch(`http://localhost:8000/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }); // e.preventDefault()\n\n    navigate('/');\n  };\n\n  let handleSubmit = e => {// e.preventDefault()\n    //  updateNote ()\n    //  navigate(\"/\")\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePage, \"xRslRYhbEpa7IMJ6ZKrs1A6SmbI=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NotePage;\nexport default NotePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","ReactComponent","ArrowLeft","useNavigate","NotePage","history","noteId","id","navigate","console","log","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","Date","deleteNote","e","handleSubmit","target","value"],"sources":["/Users/dimetrius/Documents/ReactCrashCourse/mynotes/src/pages/NotePage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom';\n// import notes from '../assets/data';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n\nimport { useNavigate} from \"react-router-dom\"\n\nconst NotePage = ({history}) => {\n  // let {id} = useParams();\n  let noteId= useParams().id;\n  \n  const navigate = useNavigate()\n\n  // useParams() Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the route path.\n  //console.log(props);\n  //console.log(useParams);\n   console.log(noteId);\n\n  \n  // let note = notes.find(note => note.id === Number(noteId));\n  \n  let [note, setNote] = useState (null)\n  // useState should be set at the top level of the component and never inside the useEffect\n\n  useEffect(() => {\n    getNote()\n  }, [noteId])\n\n  let getNote = async () => {\n    let response = await fetch (`http://localhost:8000/notes/${noteId}`)\n      console.log(response)\n    let data =  await response.json()\n      console.log(data)\n    setNote(data)\n  }\n\n  console.log(note)\n\n   let updateNote = async () => {\n       await fetch(`http://localhost:8000/notes/${noteId}`, {\n         method: 'PUT',\n         headers: {\n              'Content-type': 'application/json'\n         },\n         body: JSON.stringify({...note, 'updated': new Date()})\n\n       })\n   }\n\n   let deleteNote = async (e) => {\n        await fetch(`http://localhost:8000/notes/${noteId}`, {\n          method: 'DELETE',\n          headers: {\n              'Content-type': 'application/json'\n          },\n          body: JSON.stringify(note)\n\n        })\n        // e.preventDefault()\n        navigate('/')\n   }\n\n   let handleSubmit = (e) => {\n     // e.preventDefault()\n     //  updateNote ()\n     //  navigate(\"/\")\n   }\n\n  return (\n    <div className='note'>\n\n      <div className='note-header'>\n         <h3>\n            <Link  to=\"#\">\n              <ArrowLeft onClick={handleSubmit}/>\n            \n            </Link>\n\n         </h3>\n         <button onClick = {deleteNote}>Delete</button>\n\n      </div>\n      <textarea onChange ={(e) => {setNote({...note, 'body':e.target.value})}}  value= {note?.body} >\n      {/* // if there is... */}\n        </textarea>\n    </div>\n  )\n}\n\nexport default NotePage\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}